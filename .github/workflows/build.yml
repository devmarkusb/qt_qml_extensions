name: build

on: push

jobs:
  build:
    strategy:
      matrix:
        build_type: [Debug, RelWithDebInfo]
        config:
          - {os: ubuntu-latest, compiler: GNU,  CC: gcc,   CXX: g++     , qtcomp: gcc_64}
          - {os: ubuntu-latest, compiler: LLVM, CC: clang, CXX: clang++ , qtcomp: gcc_64}

    env:
      CC: ${{matrix.config.CC}}
      CXX: ${{matrix.config.CXX}}
      qt_version: 6.9.3
      dev_qt_base: $Qt6_DIR

    # The CMake configure and build commands are platform-agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.config.os}}

    steps:
    - uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.9.3' #todo can't get $qt_version working
        target: 'desktop'
        arch: ''
        dir: '${{github.workspace}}/externlibs/qt/'
        install-deps: 'true'
        modules: 'qt5compat'
        archives: ''
        cache: 'false'
        cache-key-prefix: 'install-qt-action'
        setup-python: 'false'
        tools: ''
        set-env: 'true'
        tools-only: 'false'
        #aqtversion: '==2.1.*'
        #py7zrversion: '==0.19.*'
        #extra: '--external 7z'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{matrix.build_type}} --output-on-failure

